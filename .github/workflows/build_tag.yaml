name: Github Actions Demo
on:
  push:
    tags:
      - 'v*'
jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    env:
      snbAccessKey: ${{ secrets.ACCESS_KEY }}
      snbSecretKey: ${{ secrets.SECRET_KEY }}
    steps:
      - name: Print a message
        run: |
          echo "Hello, World!"
          echo ${{ github.ref }}
          echo ${{ github.ref_name }}

      - name: Get Release Details
        id: release_details
        run: |
          TAG=${GITHUB_REF#refs/tags/}  # 获取当前的 tag 名称
          RELEASE_DATA=$(curl -s -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
            "https://api.github.com/repos/${{github.repository}}/releases/tags/$TAG")
          
          # 获取标题和描述
          TITLE=$(echo "$RELEASE_DATA" | jq -r '.name')  # Release Title
          DESCRIPTION=$(echo "$RELEASE_DATA" | jq -r '.body')  # Release Description
          
          echo "Release Title: $TITLE"
          echo "Release Description: $DESCRIPTION"
          
          # 设置输出，供后续步骤使用
          echo "::set-output name=release_title::$TITLE"
          echo "::set-output name=release_description::$DESCRIPTION"

      - name: Checkout code
        uses: actions/checkout@v1
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
            go-version: '1.20'
      - run: go version
      - name: Install dependencies
        run: |
          go mod download
      - name: Build Go project
        run: |
          go build -o myapp .
      - name: Run myapp
        run: |
          ./myapp
      - name: Set execute permissions for snb
        run: chmod +x ./snb
      - name: Sign firmware
        run: |
          echo "Sign firmware..."
          echo "$snbAccessKey"
          echo "$snbSecretKey"
          echo "$SIGN_KEY_ID"
          ./snb kms sign -k 01 -f ./myapp -o signed_firmware.bin
      - name: Upload build artifacts
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp
          path: ./myapp
      - name: Get artifact download URL
        run: |
            DOWNLOAD_URL="${{ steps.upload_artifact.outputs.artifact-url }}"
            echo "Artifact download URL: $DOWNLOAD_URL"